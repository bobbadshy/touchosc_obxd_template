local a=self.parent.children.kbdSettings;local b=self.parent.children.buttons;local c=self.children.white.children;local d=self.children.black.children;local e=4;local f=0;local g=2;local h=16384*0.75;local i={c[1],d[1],c[2],d[2],c[3],c[4],d[3],c[5],d[4],c[6],d[5],c[7],c[8],d[6],c[9],d[7],c[10],c[11],d[8],c[12],d[9],c[13],d[10],c[14],c[15],d[11],c[16],d[12],c[17],c[18],d[13],c[19],d[14],c[20],d[15],c[21],c[22]}local j=1;local k=2;local l=3;local m=1;local n=2;local o=3;local p={}local q=0;local r=0;local s=63;keysModulationHorz=false;keysModulationVert=false;keysPitchbendHorz=false;keysPitchbendVert=false;keysChannelPressureHorz=false;keysChannelPressureVert=false;keysPolyphonicHorz=false;keysPolyphonicVert=false;function init()setOctave(e)setTranspose(f)keysModulationHorz=a.children.btnModulationHorz.values.x==1;keysModulationVert=a.children.btnModulationVert.values.x==1;keysPitchbendHorz=a.children.btnPitchbendHorz.values.x==1;keysPitchbendVert=a.children.btnPitchbendVert.values.x==1;keysChannelPressureHorz=a.children.btnChannelPressureHorz.values.x==1;keysChannelPressureVert=a.children.btnChannelPressureVert.values.x==1;keysPolyphonicHorz=a.children.btnPolyphonicHorz.values.x==1;keysPolyphonicVert=a.children.btnPolyphonicVert.values.x==1;keysPolyphonicVert=a.children.btnPolyphonicVert.values.x==1;b.children.btnModEnable.values.x=keysModulationVert and 1 or 0;for t=1,#c do c[t]:notify('modEnabledHorz',keysModulationHorz)c[t]:notify('modEnabledVert',keysModulationVert)c[t]:notify('pbEnabledHorz',keysPitchbendHorz)c[t]:notify('pbEnabledVert',keysPitchbendVert)c[t]:notify('cAtEnabledHorz',keysChannelPressureHorz)c[t]:notify('cAtEnabledVert',keysChannelPressureVert)c[t]:notify('atEnabledHorz',keysPolyphonicHorz)c[t]:notify('atEnabledVert',keysPolyphonicVert)c[t]:notify('pbSensitivity',g)c[t]:notify('pbMaxValue',h)end;for t=1,#d do d[t]:notify('modEnabledHorz',keysModulationHorz)d[t]:notify('modEnabledVert',keysModulationVert)d[t]:notify('pbEnabledHorz',keysPitchbendHorz)d[t]:notify('pbEnabledVert',keysPitchbendVert)d[t]:notify('cAtEnabledHorz',keysChannelPressureHorz)d[t]:notify('cAtEnabledVert',keysChannelPressureVert)d[t]:notify('atEnabledHorz',keysPolyphonicHorz)d[t]:notify('atEnabledVert',keysPolyphonicVert)d[t]:notify('pbSensitivity',g)d[t]:notify('pbMaxValue',h)end end;function reset(u)s=63;r=0;calcChannelPressure(63)calcModulation(0)end;function applyToKeys()local v=e*12;for t=1,#i do local note=v+t-1+f;i[t].name=note;i[t].visible=note<=127;if p[tostring(note)]~=true then i[t].messages.MIDI[j].send=true else i[t].messages.MIDI[j].send=false end end;self.children.C0.values.text='C'..e-1;self.children.C1.values.text='C'..e;self.children.C2.values.text='C'..e+1;self.children.C3.values.text='C'..e+2 end;function applySustain(w)for t=1,127 do note=c[t]if note==nil then note=d[t]end;if w==127 then if note~=nil and note.values.touch then note.messages.MIDI[j].send=false;p[note.name]=true end elseif w==0 then if note==nil then if p[tostring(t)]then local x=c[1].messages.MIDI[j]:data()x[2]=t;x[3]=0;sendMIDI(x)p[t]=nil end else if p[note.name]~=nil then note.messages.MIDI[j].send=true;if not note.values.touch then note.messages.MIDI[j]:trigger()end;p[t]=nil end end end end end;function setOctave(y)e=y;applyToKeys()end;function setTranspose(y)f=y;applyToKeys()end;function setChannel(y)local z=y-1;for t=1,#i do i[t].tag=z end end;function calcChannelPressure(y)s=0.5*(s+y)local x=self.messages.MIDI[n]:data()x[2]=s;sendMIDI(x)end;function calcModulation(y)r=0.5*(r+y)local x=self.messages.MIDI[o]:data()x[3]=r;sendMIDI(x)end;function onReceiveNotify(A,y)if A=='pressure'then calcChannelPressure(y)elseif A=='press'then q=q+1;if q==1 then reset()end elseif A=='release'then print('down')q=q-1 elseif A=='modulation'then calcModulation(y)elseif A=='sustain'then applySustain(y)elseif A=='octave'then setOctave(y)elseif A=='transpose'then setTranspose(y)elseif A=='channel'then setChannel(y-1)elseif A=='modEnabled'then for t=1,#c do c[t]:notify('modEnabled',y)end;for t=1,#d do c[t]:notify('modEnabled',y)end elseif A=='settings'then init()end end
