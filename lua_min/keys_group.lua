local a=self.parent.children.kbdSettings;local b=self.parent.children.buttons;local c=self.children.white.children;local d=self.children.black.children;local e=4;local f=0;local g=2;local h=16384*0.75;local i={c[1],d[1],c[2],d[2],c[3],c[4],d[3],c[5],d[4],c[6],d[5],c[7],c[8],d[6],c[9],d[7],c[10],c[11],d[8],c[12],d[9],c[13],d[10],c[14],c[15],d[11],c[16],d[12],c[17],c[18],d[13],c[19],d[14],c[20],d[15],c[21],c[22]}local j=1;local k=2;local l=3;local m=1;local n=2;local o=3;local p={}local q=0;local r=0;local s=63;local t=false;local u=false;local v=false;local w=false;local x=false;local y=false;local z=false;local A=false;function init()setOctave(e)setTranspose(f)t=a.children.btnModulationHorz.values.x==1;u=a.children.btnModulationVert.values.x==1;v=a.children.btnPitchbendHorz.values.x==1;w=a.children.btnPitchbendVert.values.x==1;x=a.children.btnChannelPressureHorz.values.x==1;y=a.children.btnChannelPressureVert.values.x==1;z=a.children.btnPolyphonicHorz.values.x==1;A=a.children.btnPolyphonicVert.values.x==1;modulationSlider=a.children.btnModulationSlider.values.x==1;self.parent.children.modulationSlider.children.slider:notify('modulationSlider',modulationSlider)for B=1,#c do c[B]:notify('modEnabledHorz',t)c[B]:notify('modEnabledVert',u)c[B]:notify('pbEnabledHorz',v)c[B]:notify('pbEnabledVert',w)c[B]:notify('cAtEnabledHorz',x)c[B]:notify('cAtEnabledVert',y)c[B]:notify('atEnabledHorz',z)c[B]:notify('atEnabledVert',A)c[B]:notify('pbSensitivity',g)c[B]:notify('pbMaxValue',h)end;for B=1,#d do d[B]:notify('modEnabledHorz',t)d[B]:notify('modEnabledVert',u)d[B]:notify('pbEnabledHorz',v)d[B]:notify('pbEnabledVert',w)d[B]:notify('cAtEnabledHorz',x)d[B]:notify('cAtEnabledVert',y)d[B]:notify('atEnabledHorz',z)d[B]:notify('atEnabledVert',A)d[B]:notify('pbSensitivity',g)d[B]:notify('pbMaxValue',h)end end;function reset(C)s=63;r=0;calcChannelPressure(63)calcModulation(0)end;function applyToKeys()local D=e*12;for B=1,#i do local note=D+B-1+f;i[B].name=note;i[B].visible=note<=127;if p[tostring(note)]~=true then i[B].messages.MIDI[j].send=true else i[B].messages.MIDI[j].send=false end end;self.children.C0.values.text='C'..e-1;self.children.C1.values.text='C'..e;self.children.C2.values.text='C'..e+1;self.children.C3.values.text='C'..e+2 end;function applySustain(E)for B=1,127 do note=c[B]if note==nil then note=d[B]end;if E==127 then if note~=nil and note.values.touch then note.messages.MIDI[j].send=false;p[note.name]=true end elseif E==0 then if note==nil then if p[tostring(B)]then local F=c[1].messages.MIDI[j]:data()F[2]=B;F[3]=0;sendMIDI(F)p[B]=nil end else if p[note.name]~=nil then note.messages.MIDI[j].send=true;if not note.values.touch then note.messages.MIDI[j]:trigger()end;p[B]=nil end end end end end;function setOctave(G)e=G;applyToKeys()end;function setTranspose(G)f=G;applyToKeys()end;function setChannel(G)local H=G-1;for B=1,#i do i[B].tag=H end end;function calcChannelPressure(G)s=0.5*(s+G)local F=self.messages.MIDI[n]:data()F[2]=s;sendMIDI(F)end;function calcModulation(G)r=0.5*(r+G)local F=self.messages.MIDI[o]:data()F[3]=r;sendMIDI(F)end;function onReceiveNotify(I,G)if I=='pressure'then calcChannelPressure(G)elseif I=='press'then q=q+1;if q==1 then reset()end elseif I=='release'then print('down')q=q-1 elseif I=='modulation'then calcModulation(G)elseif I=='sustain'then applySustain(G)elseif I=='octave'then setOctave(G)elseif I=='transpose'then setTranspose(G)elseif I=='channel'then setChannel(G-1)elseif I=='modEnabled'then for B=1,#c do c[B]:notify('modEnabled',G)end;for B=1,#d do c[B]:notify('modEnabled',G)end elseif I=='settings'then init()end end
