MIDI=0;LINEAR=1;LOG=2;CMD_CONFIG='cmdConfig'local a={sens=1.5,lblControlName=nil,low=0,high=127,min=nil,max=nil,decimals=0,unit='',type=MIDI,doubleTap=true,tapDelay=300}local b;local c;local d=nil;local e=0;local f=0;local g=false;function onReceiveNotify(h,i)if h==CMD_CONFIG then a=json.toTable(i)if a.sens==nil then a.sens=1.5 end;if a.lblControlName==nil then a.lblControlName=nil end;if a.low==nil then a.low=0 end;if a.high==nil then a.high=127 end;if a.min==nil then a.min=nil end;if a.max==nil then a.max=nil end;if a.decimals==nil then a.decimals=0 end;if a.unit==nil then a.unit=''end;if a.type==nil then a.type=MIDI end;if a.doubleTap==nil then a.doubleTap=true end;if a.tapDelay==nil then a.tapDelay=300 end;a.sens=tonumber(a.sens)a.lblControlName=tostring(a.lblControlName)a.low=tonumber(a.low)a.high=tonumber(a.high)a.min=tonumber(a.min)a.max=tonumber(a.max)a.decimals=tonumber(a.decimals)a.unit=tostring(a.unit)print(a,type)g=true end end;function onValueChanged(k)if not g then print('ERROR! No input curve config present! Aborting!')return end;if k=='touch'and not self.values.touch then _checkForDoubleTap()end;if k=='x'or k=='y'then _showTrueValue(self.values[k])end;if self.pointers[1]==nil then return end;if d==nil then _getOrientation()end;_calcSmoothValue(k)end;function _calcSmoothValue(k)if k=='touch'and self.values.touch then _setStartPoint()elseif k=='x'or k=='y'and self.values.touch then e=_getScaleFactor()local j=self:getValueField(k,ValueField.LAST)local l=(self.values[k]-j)*e;self.values[k]=j+l end end;function _getOrientation()d=true;if self.properties.orientation==Orientation.NORTH or self.properties.orientation==Orientation.SOUTH then if self.type==ControlType.FADER then d=false end else if self.type==ControlType.XY or self.type==ControlType.RADIAL or self.type==ControlType.ENCODER then d=false end end end;function _resetValuesToDefault()local k={'x','y'}for m=1,2 do if self.values[k[m]]~=nil then if self:getValueProperty(k[m],ValueProperty.LOCKED_DEFAULT_CURRENT)then self.values[k[m]]=self.properties.centered==true and 0.5 or 0 else self.values[k[m]]=self:getValueField(k[m],ValueField.DEFAULT)end end end end;function _showTrueValue(n)if a.lblControlName==nil then return end;local o=self.parent.children[a.lblControlName]if o==nil then return end;local p=_calcRealValue(n)local q;if a.decimals>0 then s=string.format('%.'..a.decimals..'f',p)else s=p end;if a.unit~=''then s=s..' '..a.unit end;o.values.text=s end;function _calcRealValue(n)local r=10^a.decimals;if a.type==LINEAR then local t=a.low;local u=a.high;if t==nil or u==nil then return _showAsMidi(n)end;local v=a.min;local w=a.max;if v==nil then v=t end;if w==nil then w=u end;local l=u-t;return math.min(w,math.max(v,math.floor(n*l*r+0.5)/r+t))elseif a.type==LOG then return r*math.log(n)end;return _showAsMidi(n)end;function _showAsMidi(n)return math.floor((n+0.5)*127)end;function _checkForDoubleTap()if a.doubleTap then local x=getMillis()if x-f<a.tapDelay then _resetValuesToDefault()f=0 else f=x end end end;function _setStartPoint()b=self.pointers[1].x;c=self.pointers[1].y;e=0.0 end;function _getScaleFactor()local y,w;if self.type==ControlType.RADIAL or self.type==ControlType.ENCODER then w=((self.frame.h*a.sens)^2+(self.frame.w*a.sens)^2)^0.5;y=((self.pointers[1].y-c)^2+(self.pointers[1].x-b)^2)^0.5 elseif k=='x'and not d or k=='y'and d then w=self.frame.h*a.sens;y=self.pointers[1].y-c else w=self.frame.w*a.sens;y=self.pointers[1].x-b end;if math.abs(y)<=0 then y=y+w*(e+0.02)/a.sens end;return math.max(0,e,math.min(1,math.abs(y/w)))end
